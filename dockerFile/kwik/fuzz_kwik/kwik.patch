--- kwik/src/main/java/net/luminis/quic/run/SampleWebServer.java	2024-01-30 14:13:06.541543469 +1030
+++ kwik/src/main/java/net/luminis/quic/run/SampleWebServer.java	2024-01-30 14:49:26.622297491 +1030
@@ -24,7 +24,13 @@
 import net.luminis.quic.log.SysOutLogger;
 import net.luminis.quic.server.ApplicationProtocolConnectionFactory;
 import net.luminis.quic.server.ServerConnector;
+import net.luminis.quic.server.h09.Http09ApplicationProtocolFactory; // ADDED HERE
 import org.apache.commons.cli.*;
+import net.luminis.quic.crypto.ConnectionSecrets; // ADDED HERE
+import net.luminis.quic.VersionHolder; // ADDED HERE
+import net.luminis.quic.Role; //ADDED HERE
+import java.nio.file.Path; // ADDED HERE
+import java.nio.file.Paths; // ADDED HERE
 
 import java.io.File;
 import java.io.FileInputStream;
@@ -120,7 +126,30 @@
             serverConnector.registerApplicationProtocol("h3", http3ApplicationProtocolConnectionFactory);
         } catch (ClassNotFoundException | NoSuchMethodException | InstantiationException | IllegalAccessException | InvocationTargetException e) {
             log.error("No H3 protocol: Flupke plugin not found.");
-            System.exit(1);
+            //System.exit(1);
         }
+        
+        // ADDED HERE
+        Http09ApplicationProtocolFactory http09ApplicationProtocolFactory = new Http09ApplicationProtocolFactory(wwwDir);
+
+        final ApplicationProtocolConnectionFactory http3ApplicationProtocolFactory = http3ApplicationProtocolConnectionFactory;
+        supportedVersions.forEach(version -> {
+            String protocol = "hq";
+            String versionSuffix = version.getDraftVersion();
+            if (! versionSuffix.isBlank()) {
+                protocol += "-" + versionSuffix;
+            }
+            else {
+                protocol = "hq-interop";
+            }
+            serverConnector.registerApplicationProtocol(protocol, http09ApplicationProtocolFactory);
+
+            if (http3ApplicationProtocolFactory != null) {
+                String h3Protocol = protocol.replace("hq-interop", "h3").replace("hq", "h3");
+                serverConnector.registerApplicationProtocol(h3Protocol, http3ApplicationProtocolFactory);
+            }
+        });
+
+        // ADDED END
     }
 }
