FROM ubuntu:20.04
RUN sed -i 's/http:\/\/archive.ubuntu.com/http:\/\/archive.ubuntu.com\/ubuntu/' /etc/apt/sources.list

RUN DEBIAN_FRONTEND=noninteractive apt update -y && apt upgrade -y
RUN DEBIAN_FRONTEND=noninteractive apt install -y build-essential git curl graphviz cmake libtool libev-dev pkg-config libssl-dev

# install quicly
WORKDIR /tmp
RUN git clone https://github.com/h2o/quicly.git quicly
WORKDIR /tmp/quicly
RUN git checkout d44cc8b2 
RUN git submodule update --init --recursive
COPY handshake_timeout.patch .
RUN patch -p1 < handshake_timeout.patch
RUN cmake .
RUN make

RUN apt install -y pip python3-tk lsof libssl-dev python3-dev default-jdk
                        
RUN pip install asgiref dnslib httpbin starlette wsproto aioquic pydot && \
    pip install asgiref dnslib httpbin starlette wsproto --no-cache-dir && \
    pip install Werkzeug==2.0.3 && \
    pip install "flask<2.2.0"
    
WORKDIR /tmp/quicLearner
RUN python3 -m pip install pydot py4j==0.10.9.7

# make sure the fuzzer and server have enough stack size
RUN echo "ulimit -s 65536" >> ~/.bashrc
# use . to replace source because it is running in /bin/sh
RUN . ~/.bashrc

COPY run_fuzzing.sh /run_fuzzing.sh
RUN chmod +x /run_fuzzing.sh

ENTRYPOINT ["/run_fuzzing.sh"]